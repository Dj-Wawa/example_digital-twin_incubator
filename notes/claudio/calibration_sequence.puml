@startuml
boundary ExternalTrigger as trig
control Calibrator as cal
entity LSESolver as lse
entity Simulator as sim
database DataAccess as db
database ModelManager as model
trig ->> cal: start(startDate, endDate, N)
cal ->> lse: startOptimization(params_0)
loop N times
  lse -> cal: getResidual(params_i)
  cal -> db: getHistoricalData(startDate, endDate)
    db --> cal: data
  cal -> sim: runSimulation(data, params_i)
    sim -> model: instantiateModel(params_i)
      model --> sim: model_i
    sim -> sim: run(data, model_i)
    note right
    interface of model similar to FMI Interface, so
    that it is not transmitted over the network?
    Or do we find a way to transmit the 
    model equations to the simulator?
    We can also have multiple kinds 
    of simulators that operate differenly.
    end note
    sim --> cal: results
  cal -> cal: calcResidual()
    cal --> lse: residual
  lse -> lse: updateParams()
end
lse ->> cal: params
cal --> trig: params
@enduml